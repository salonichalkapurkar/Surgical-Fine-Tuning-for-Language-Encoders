######################################################################
linear layer fine-tuning boolq
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.15) or chardet (3.0.4) doesn't match a supported version!
  warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Using cuda
  0%|          | 0/3 [00:00<?, ?it/s] 67%|██████▋   | 2/3 [00:00<00:00, 14.63it/s]100%|██████████| 3/3 [00:00<00:00, 16.88it/s]
Map:   0%|          | 0/9427 [00:00<?, ? examples/s]Map:  11%|█         | 1000/9427 [00:00<00:03, 2563.63 examples/s]Map:  21%|██        | 2000/9427 [00:00<00:02, 2908.06 examples/s]Map:  32%|███▏      | 3000/9427 [00:01<00:02, 3036.41 examples/s]Map:  42%|████▏     | 4000/9427 [00:01<00:01, 3134.78 examples/s]Map:  53%|█████▎    | 5000/9427 [00:01<00:01, 3166.23 examples/s]Map:  64%|██████▎   | 6000/9427 [00:01<00:01, 3190.62 examples/s]Map:  74%|███████▍  | 7000/9427 [00:02<00:00, 2843.29 examples/s]Map:  85%|████████▍ | 8000/9427 [00:02<00:00, 2946.27 examples/s]Map:  95%|█████████▌| 9000/9427 [00:02<00:00, 3016.49 examples/s]Map: 100%|██████████| 9427/9427 [00:03<00:00, 3038.99 examples/s]                                                                 Map:   0%|          | 0/3270 [00:00<?, ? examples/s]Map:  31%|███       | 1000/3270 [00:00<00:00, 3334.10 examples/s]Map:  61%|██████    | 2000/3270 [00:00<00:00, 3184.40 examples/s]Map:  92%|█████████▏| 3000/3270 [00:00<00:00, 3151.15 examples/s]                                                                 /home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
{'eval_loss': 0.693341076374054, 'eval_accuracy': 0.581651376146789, 'eval_runtime': 104.0714, 'eval_samples_per_second': 31.421, 'eval_steps_per_second': 1.97, 'epoch': 1.0}
{'loss': 0.7018, 'learning_rate': 2.5e-06, 'epoch': 1.69}
{'eval_loss': 0.6769471764564514, 'eval_accuracy': 0.5954128440366973, 'eval_runtime': 104.0171, 'eval_samples_per_second': 31.437, 'eval_steps_per_second': 1.971, 'epoch': 2.0}
{'eval_loss': 0.6692222952842712, 'eval_accuracy': 0.6100917431192661, 'eval_runtime': 104.0749, 'eval_samples_per_second': 31.42, 'eval_steps_per_second': 1.97, 'epoch': 3.0}
{'loss': 0.6775, 'learning_rate': 5e-06, 'epoch': 3.39}
{'eval_loss': 0.6663596630096436, 'eval_accuracy': 0.6162079510703364, 'eval_runtime': 104.1412, 'eval_samples_per_second': 31.4, 'eval_steps_per_second': 1.968, 'epoch': 4.0}
{'eval_loss': 0.6659126877784729, 'eval_accuracy': 0.6165137614678899, 'eval_runtime': 104.0528, 'eval_samples_per_second': 31.426, 'eval_steps_per_second': 1.97, 'epoch': 5.0}
{'loss': 0.6741, 'learning_rate': 7.5e-06, 'epoch': 5.08}
{'eval_loss': 0.6659384965896606, 'eval_accuracy': 0.6162079510703364, 'eval_runtime': 104.1055, 'eval_samples_per_second': 31.41, 'eval_steps_per_second': 1.969, 'epoch': 6.0}
{'loss': 0.6686, 'learning_rate': 1e-05, 'epoch': 6.78}
{'eval_loss': 0.6656874418258667, 'eval_accuracy': 0.617125382262997, 'eval_runtime': 104.0343, 'eval_samples_per_second': 31.432, 'eval_steps_per_second': 1.971, 'epoch': 7.0}
{'eval_loss': 0.6661309599876404, 'eval_accuracy': 0.6168195718654435, 'eval_runtime': 103.4049, 'eval_samples_per_second': 31.623, 'eval_steps_per_second': 1.982, 'epoch': 8.0}
{'loss': 0.6723, 'learning_rate': 1.25e-05, 'epoch': 8.47}
{'eval_loss': 0.6670571565628052, 'eval_accuracy': 0.6159021406727829, 'eval_runtime': 103.4808, 'eval_samples_per_second': 31.6, 'eval_steps_per_second': 1.981, 'epoch': 9.0}
{'eval_loss': 0.6651248335838318, 'eval_accuracy': 0.618348623853211, 'eval_runtime': 103.4985, 'eval_samples_per_second': 31.595, 'eval_steps_per_second': 1.981, 'epoch': 10.0}
{'train_runtime': 4268.8299, 'train_samples_per_second': 22.083, 'train_steps_per_second': 0.691, 'train_loss': 0.676995456501589, 'epoch': 10.0}
Total training time: 4268.84 seconds
######################################################################
linear layer fine-tuning record
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.15) or chardet (3.0.4) doesn't match a supported version!
  warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Using cuda
Downloading and preparing dataset super_glue/record to /home/gbelapurkar_umass_edu/.cache/huggingface/datasets/super_glue/record/1.0.3/bb9675f958ebfee0d5d6dc5476fafe38c79123727a7258d515c450873dbdbbed...
Downloading data:   0%|          | 0.00/51.8M [00:00<?, ?B/s]Downloading data:   3%|▎         | 1.57M/51.8M [00:00<00:03, 15.7MB/s]Downloading data:   9%|▉         | 4.88M/51.8M [00:00<00:01, 25.7MB/s]Downloading data:  19%|█▊        | 9.59M/51.8M [00:00<00:01, 35.4MB/s]Downloading data:  31%|███▏      | 16.2M/51.8M [00:00<00:00, 47.6MB/s]Downloading data:  47%|████▋     | 24.1M/51.8M [00:00<00:00, 58.8MB/s]Downloading data:  62%|██████▏   | 32.3M/51.8M [00:00<00:00, 66.7MB/s]Downloading data:  78%|███████▊  | 40.5M/51.8M [00:00<00:00, 71.6MB/s]Downloading data:  96%|█████████▋| 49.9M/51.8M [00:00<00:00, 78.7MB/s]Downloading data: 100%|██████████| 51.8M/51.8M [00:00<00:00, 63.0MB/s]
Generating train split:   0%|          | 0/100730 [00:00<?, ? examples/s]Generating train split:   0%|          | 299/100730 [00:00<00:34, 2869.79 examples/s]Generating train split:   1%|          | 670/100730 [00:00<00:29, 3353.04 examples/s]Generating train split:   1%|          | 1228/100730 [00:00<00:30, 3223.84 examples/s]Generating train split:   2%|▏         | 1711/100730 [00:00<00:26, 3741.14 examples/s]Generating train split:   2%|▏         | 2121/100730 [00:00<00:25, 3849.16 examples/s]Generating train split:   3%|▎         | 2607/100730 [00:00<00:23, 4159.83 examples/s]Generating train split:   3%|▎         | 3053/100730 [00:00<00:31, 3133.84 examples/s]Generating train split:   4%|▎         | 3539/100730 [00:00<00:27, 3554.45 examples/s]Generating train split:   4%|▍         | 4000/100730 [00:01<00:25, 3738.50 examples/s]Generating train split:   4%|▍         | 4494/100730 [00:01<00:23, 4054.72 examples/s]Generating train split:   5%|▍         | 4986/100730 [00:01<00:22, 4290.76 examples/s]Generating train split:   6%|▌         | 5646/100730 [00:01<00:21, 4325.39 examples/s]Generating train split:   6%|▋         | 6304/100730 [00:01<00:21, 4342.08 examples/s]Generating train split:   7%|▋         | 6798/100730 [00:01<00:20, 4487.92 examples/s]Generating train split:   7%|▋         | 7498/100730 [00:01<00:20, 4477.04 examples/s]Generating train split:   8%|▊         | 7992/100730 [00:01<00:20, 4588.25 examples/s]Generating train split:   9%|▊         | 8644/100730 [00:02<00:20, 4501.77 examples/s]Generating train split:   9%|▉         | 9311/100730 [00:02<00:20, 4480.51 examples/s]Generating train split:  10%|▉         | 9814/100730 [00:02<00:19, 4610.54 examples/s]Generating train split:  10%|█         | 10497/100730 [00:02<00:19, 4548.17 examples/s]Generating train split:  11%|█         | 10991/100730 [00:02<00:19, 4641.43 examples/s]Generating train split:  12%|█▏        | 11646/100730 [00:02<00:19, 4545.30 examples/s]Generating train split:  12%|█▏        | 12301/100730 [00:02<00:19, 4481.28 examples/s]Generating train split:  13%|█▎        | 12788/100730 [00:03<00:19, 4571.88 examples/s]Generating train split:  13%|█▎        | 13489/100730 [00:03<00:19, 4506.12 examples/s]Generating train split:  14%|█▍        | 13978/100730 [00:03<00:18, 4595.67 examples/s]Generating train split:  14%|█▍        | 14452/100730 [00:03<00:23, 3736.71 examples/s]Generating train split:  15%|█▍        | 14950/100730 [00:03<00:21, 4017.68 examples/s]Generating train split:  15%|█▌        | 15608/100730 [00:03<00:20, 4136.16 examples/s]Generating train split:  16%|█▌        | 16258/100730 [00:03<00:20, 4196.51 examples/s]Generating train split:  17%|█▋        | 16749/100730 [00:03<00:19, 4358.87 examples/s]Generating train split:  17%|█▋        | 17376/100730 [00:04<00:19, 4294.80 examples/s]Generating train split:  18%|█▊        | 17879/100730 [00:04<00:18, 4468.47 examples/s]Generating train split:  18%|█▊        | 18536/100730 [00:04<00:18, 4435.31 examples/s]Generating train split:  19%|█▉        | 19000/100730 [00:04<00:18, 4358.40 examples/s]Generating train split:  19%|█▉        | 19481/100730 [00:04<00:18, 4472.05 examples/s]Generating train split:  20%|█▉        | 19975/100730 [00:04<00:17, 4592.69 examples/s]Generating train split:  20%|██        | 20637/100730 [00:04<00:17, 4524.17 examples/s]Generating train split:  21%|██        | 21293/100730 [00:04<00:17, 4470.46 examples/s]Generating train split:  22%|██▏       | 21792/100730 [00:05<00:17, 4595.44 examples/s]Generating train split:  22%|██▏       | 22488/100730 [00:05<00:17, 4527.27 examples/s]Generating train split:  23%|██▎       | 22974/100730 [00:05<00:16, 4606.89 examples/s]Generating train split:  23%|██▎       | 23635/100730 [00:05<00:17, 4532.66 examples/s]Generating train split:  24%|██▍       | 24294/100730 [00:05<00:17, 4483.27 examples/s]Generating train split:  25%|██▍       | 24781/100730 [00:05<00:16, 4572.10 examples/s]Generating train split:  25%|██▌       | 25250/100730 [00:05<00:16, 4464.13 examples/s]Generating train split:  26%|██▌       | 25741/100730 [00:05<00:16, 4577.43 examples/s]Generating train split:  26%|██▌       | 26297/100730 [00:06<00:21, 3486.62 examples/s]Generating train split:  27%|██▋       | 26784/100730 [00:06<00:19, 3786.92 examples/s]Generating train split:  27%|██▋       | 27237/100730 [00:06<00:18, 3869.26 examples/s]Generating train split:  28%|██▊       | 27731/100730 [00:06<00:17, 4133.68 examples/s]Generating train split:  28%|██▊       | 28390/100730 [00:06<00:17, 4221.36 examples/s]Generating train split:  29%|██▊       | 28869/100730 [00:06<00:16, 4361.01 examples/s]Generating train split:  29%|██▉       | 29516/100730 [00:06<00:16, 4340.99 examples/s]Generating train split:  30%|██▉       | 30000/100730 [00:07<00:16, 4341.04 examples/s]Generating train split:  30%|███       | 30485/100730 [00:07<00:15, 4470.62 examples/s]Generating train split:  31%|███       | 30981/100730 [00:07<00:15, 4599.12 examples/s]Generating train split:  31%|███▏      | 31634/100730 [00:07<00:15, 4506.87 examples/s]Generating train split:  32%|███▏      | 32289/100730 [00:07<00:15, 4456.82 examples/s]Generating train split:  33%|███▎      | 32772/100730 [00:07<00:14, 4547.77 examples/s]Generating train split:  33%|███▎      | 33255/100730 [00:07<00:15, 4437.00 examples/s]Generating train split:  34%|███▎      | 33747/100730 [00:07<00:14, 4562.02 examples/s]Generating train split:  34%|███▍      | 34399/100730 [00:07<00:14, 4482.63 examples/s]Generating train split:  35%|███▍      | 34893/100730 [00:08<00:14, 4597.35 examples/s]Generating train split:  35%|███▌      | 35556/100730 [00:08<00:14, 4530.29 examples/s]Generating train split:  36%|███▌      | 36239/100730 [00:08<00:14, 4480.61 examples/s]Generating train split:  36%|███▋      | 36720/100730 [00:08<00:14, 4558.55 examples/s]Generating train split:  37%|███▋      | 37251/100730 [00:08<00:17, 3728.23 examples/s]Generating train split:  37%|███▋      | 37749/100730 [00:08<00:15, 4004.55 examples/s]Generating train split:  38%|███▊      | 38412/100730 [00:08<00:15, 4134.95 examples/s]Generating train split:  39%|███▊      | 38907/100730 [00:09<00:14, 4322.94 examples/s]Generating train split:  39%|███▉      | 39548/100730 [00:09<00:14, 4303.43 examples/s]Generating train split:  40%|███▉      | 40000/100730 [00:09<00:14, 4269.71 examples/s]Generating train split:  40%|████      | 40473/100730 [00:09<00:13, 4382.23 examples/s]Generating train split:  41%|████      | 40965/100730 [00:09<00:13, 4522.81 examples/s]Generating train split:  41%|████▏     | 41626/100730 [00:09<00:13, 4477.98 examples/s]Generating train split:  42%|████▏     | 42276/100730 [00:09<00:13, 4427.59 examples/s]Generating train split:  42%|████▏     | 42773/100730 [00:09<00:12, 4559.15 examples/s]Generating train split:  43%|████▎     | 43471/100730 [00:10<00:12, 4454.07 examples/s]Generating train split:  44%|████▎     | 43961/100730 [00:10<00:12, 4559.46 examples/s]Generating train split:  44%|████▍     | 44622/100730 [00:10<00:12, 4506.79 examples/s]Generating train split:  45%|████▍     | 45289/100730 [00:10<00:12, 4480.64 examples/s]Generating train split:  45%|████▌     | 45774/100730 [00:10<00:12, 4565.87 examples/s]Generating train split:  46%|████▌     | 46242/100730 [00:10<00:12, 4450.13 examples/s]Generating train split:  46%|████▋     | 46737/100730 [00:10<00:11, 4578.29 examples/s]Generating train split:  47%|████▋     | 47382/100730 [00:10<00:11, 4473.33 examples/s]Generating train split:  48%|████▊     | 47867/100730 [00:11<00:11, 4567.14 examples/s]Generating train split:  48%|████▊     | 48510/100730 [00:11<00:13, 3766.68 examples/s]Generating train split:  49%|████▊     | 48997/100730 [00:11<00:12, 4008.19 examples/s]Generating train split:  49%|████▉     | 49650/100730 [00:11<00:12, 4117.01 examples/s]Generating train split:  50%|████▉     | 50309/100730 [00:11<00:12, 4200.48 examples/s]Generating train split:  50%|█████     | 50802/100730 [00:11<00:11, 4366.84 examples/s]Generating train split:  51%|█████     | 51496/100730 [00:11<00:11, 4379.96 examples/s]Generating train split:  52%|█████▏    | 51983/100730 [00:12<00:10, 4492.87 examples/s]Generating train split:  52%|█████▏    | 52643/100730 [00:12<00:10, 4457.20 examples/s]Generating train split:  53%|█████▎    | 53312/100730 [00:12<00:10, 4455.38 examples/s]Generating train split:  53%|█████▎    | 53807/100730 [00:12<00:10, 4569.65 examples/s]Generating train split:  54%|█████▍    | 54469/100730 [00:12<00:10, 4445.78 examples/s]Generating train split:  55%|█████▍    | 54962/100730 [00:12<00:10, 4559.76 examples/s]Generating train split:  55%|█████▌    | 55627/100730 [00:12<00:09, 4514.76 examples/s]Generating train split:  56%|█████▌    | 56279/100730 [00:12<00:09, 4456.07 examples/s]Generating train split:  56%|█████▋    | 56763/100730 [00:13<00:09, 4545.55 examples/s]Generating train split:  57%|█████▋    | 57243/100730 [00:13<00:09, 4463.77 examples/s]Generating train split:  57%|█████▋    | 57729/100730 [00:13<00:09, 4564.45 examples/s]Generating train split:  58%|█████▊    | 58377/100730 [00:13<00:09, 4476.23 examples/s]Generating train split:  58%|█████▊    | 58861/100730 [00:13<00:09, 4566.01 examples/s]Generating train split:  59%|█████▉    | 59522/100730 [00:13<00:09, 4504.92 examples/s]Generating train split:  60%|█████▉    | 60117/100730 [00:13<00:10, 3823.79 examples/s]Generating train split:  60%|██████    | 60594/100730 [00:14<00:09, 4030.02 examples/s]Generating train split:  61%|██████    | 61241/100730 [00:14<00:09, 4074.56 examples/s]Generating train split:  61%|██████▏   | 61717/100730 [00:14<00:09, 4232.64 examples/s]Generating train split:  62%|██████▏   | 62380/100730 [00:14<00:08, 4292.76 examples/s]Generating train split:  62%|██████▏   | 62867/100730 [00:14<00:08, 4427.55 examples/s]Generating train split:  63%|██████▎   | 63519/100730 [00:14<00:08, 4396.52 examples/s]Generating train split:  64%|██████▎   | 64000/100730 [00:14<00:08, 4360.83 examples/s]Generating train split:  64%|██████▍   | 64473/100730 [00:14<00:08, 4449.87 examples/s]Generating train split:  64%|██████▍   | 64961/100730 [00:14<00:07, 4560.65 examples/s]Generating train split:  65%|██████▌   | 65617/100730 [00:15<00:07, 4488.82 examples/s]Generating train split:  66%|██████▌   | 66273/100730 [00:15<00:07, 4447.66 examples/s]Generating train split:  66%|██████▋   | 66759/100730 [00:15<00:07, 4546.87 examples/s]Generating train split:  67%|██████▋   | 67244/100730 [00:15<00:07, 4439.21 examples/s]Generating train split:  67%|██████▋   | 67740/100730 [00:15<00:07, 4571.44 examples/s]Generating train split:  68%|██████▊   | 68397/100730 [00:15<00:07, 4497.52 examples/s]Generating train split:  68%|██████▊   | 68883/100730 [00:15<00:06, 4587.61 examples/s]Generating train split:  69%|██████▉   | 69533/100730 [00:16<00:06, 4493.79 examples/s]Generating train split:  69%|██████▉   | 70000/100730 [00:16<00:07, 4388.62 examples/s]Generating train split:  70%|██████▉   | 70482/100730 [00:16<00:06, 4497.64 examples/s]Generating train split:  70%|███████   | 71000/100730 [00:16<00:08, 3519.67 examples/s]Generating train split:  71%|███████   | 71487/100730 [00:16<00:07, 3821.06 examples/s]Generating train split:  71%|███████▏  | 71966/100730 [00:16<00:07, 4052.48 examples/s]Generating train split:  72%|███████▏  | 72617/100730 [00:16<00:06, 4146.43 examples/s]Generating train split:  73%|███████▎  | 73287/100730 [00:16<00:06, 4247.20 examples/s]Generating train split:  73%|███████▎  | 73775/100730 [00:17<00:06, 4395.75 examples/s]Generating train split:  74%|███████▎  | 74241/100730 [00:17<00:06, 4326.62 examples/s]Generating train split:  74%|███████▍  | 74735/100730 [00:17<00:05, 4483.36 examples/s]Generating train split:  75%|███████▍  | 75379/100730 [00:17<00:05, 4412.34 examples/s]Generating train split:  75%|███████▌  | 75864/100730 [00:17<00:05, 4520.38 examples/s]Generating train split:  76%|███████▌  | 76517/100730 [00:17<00:05, 4459.92 examples/s]Generating train split:  76%|███████▋  | 77000/100730 [00:17<00:05, 4380.94 examples/s]Generating train split:  77%|███████▋  | 77493/100730 [00:17<00:05, 4518.51 examples/s]Generating train split:  77%|███████▋  | 77983/100730 [00:17<00:04, 4617.32 examples/s]Generating train split:  78%|███████▊  | 78621/100730 [00:18<00:04, 4483.10 examples/s]Generating train split:  79%|███████▊  | 79281/100730 [00:18<00:04, 4444.54 examples/s]Generating train split:  79%|███████▉  | 79759/100730 [00:18<00:04, 4525.19 examples/s]Generating train split:  80%|███████▉  | 80247/100730 [00:18<00:04, 4437.23 examples/s]Generating train split:  80%|████████  | 80736/100730 [00:18<00:04, 4552.55 examples/s]Generating train split:  81%|████████  | 81382/100730 [00:18<00:04, 4460.00 examples/s]Generating train split:  81%|████████▏ | 81865/100730 [00:18<00:04, 4553.68 examples/s]Generating train split:  82%|████████▏ | 82363/100730 [00:19<00:04, 3741.85 examples/s]Generating train split:  82%|████████▏ | 82857/100730 [00:19<00:04, 4019.76 examples/s]Generating train split:  83%|████████▎ | 83517/100730 [00:19<00:04, 4142.58 examples/s]Generating train split:  83%|████████▎ | 84000/100730 [00:19<00:04, 4170.98 examples/s]Generating train split:  84%|████████▍ | 84495/100730 [00:19<00:03, 4361.89 examples/s]Generating train split:  84%|████████▍ | 84988/100730 [00:19<00:03, 4509.91 examples/s]Generating train split:  85%|████████▌ | 85659/100730 [00:19<00:03, 4495.02 examples/s]Generating train split:  86%|████████▌ | 86328/100730 [00:19<00:03, 4479.70 examples/s]Generating train split:  86%|████████▌ | 86815/100730 [00:20<00:03, 4573.10 examples/s]Generating train split:  87%|████████▋ | 87487/100730 [00:20<00:02, 4493.35 examples/s]Generating train split:  87%|████████▋ | 87965/100730 [00:20<00:02, 4561.00 examples/s]Generating train split:  88%|████████▊ | 88631/100730 [00:20<00:02, 4517.38 examples/s]Generating train split:  89%|████████▊ | 89273/100730 [00:20<00:02, 4437.36 examples/s]Generating train split:  89%|████████▉ | 89755/100730 [00:20<00:02, 4527.51 examples/s]Generating train split:  90%|████████▉ | 90241/100730 [00:20<00:02, 4426.92 examples/s]Generating train split:  90%|█████████ | 90722/100730 [00:20<00:02, 4522.79 examples/s]Generating train split:  91%|█████████ | 91373/100730 [00:21<00:02, 4456.84 examples/s]Generating train split:  91%|█████████ | 91863/100730 [00:21<00:01, 4566.88 examples/s]Generating train split:  92%|█████████▏| 92517/100730 [00:21<00:01, 4491.11 examples/s]Generating train split:  92%|█████████▏| 93000/100730 [00:21<00:01, 4412.42 examples/s]Generating train split:  93%|█████████▎| 93490/100730 [00:21<00:01, 4534.87 examples/s]Generating train split:  93%|█████████▎| 94000/100730 [00:21<00:01, 3760.16 examples/s]Generating train split:  94%|█████████▍| 94493/100730 [00:21<00:01, 4034.44 examples/s]Generating train split:  94%|█████████▍| 94980/100730 [00:21<00:01, 4242.75 examples/s]Generating train split:  95%|█████████▍| 95638/100730 [00:22<00:01, 4289.67 examples/s]Generating train split:  96%|█████████▌| 96262/100730 [00:22<00:01, 4243.40 examples/s]Generating train split:  96%|█████████▌| 96747/100730 [00:22<00:00, 4387.00 examples/s]Generating train split:  97%|█████████▋| 97402/100730 [00:22<00:00, 4375.76 examples/s]Generating train split:  97%|█████████▋| 97879/100730 [00:22<00:00, 4469.92 examples/s]Generating train split:  98%|█████████▊| 98524/100730 [00:22<00:00, 4409.28 examples/s]Generating train split:  98%|█████████▊| 99000/100730 [00:22<00:00, 4351.57 examples/s]Generating train split:  99%|█████████▉| 99495/100730 [00:22<00:00, 4500.99 examples/s]Generating train split:  99%|█████████▉| 99984/100730 [00:22<00:00, 4599.77 examples/s]Generating train split: 100%|█████████▉| 100638/100730 [00:23<00:00, 4511.42 examples/s]                                                                                        Generating validation split:   0%|          | 0/10000 [00:00<?, ? examples/s]Generating validation split:   3%|▎         | 333/10000 [00:00<00:02, 3223.22 examples/s]Generating validation split:   8%|▊         | 750/10000 [00:00<00:02, 3758.99 examples/s]Generating validation split:  11%|█▏        | 1130/10000 [00:00<00:02, 3774.93 examples/s]Generating validation split:  16%|█▌        | 1622/10000 [00:00<00:01, 4220.75 examples/s]Generating validation split:  23%|██▎       | 2255/10000 [00:00<00:01, 4217.64 examples/s]Generating validation split:  27%|██▋       | 2743/10000 [00:00<00:01, 4413.89 examples/s]Generating validation split:  34%|███▍      | 3394/10000 [00:00<00:01, 4378.53 examples/s]Generating validation split:  39%|███▊      | 3874/10000 [00:00<00:01, 4490.93 examples/s]Generating validation split:  43%|████▎     | 4331/10000 [00:01<00:01, 3378.71 examples/s]Generating validation split:  48%|████▊     | 4813/10000 [00:01<00:01, 3708.57 examples/s]Generating validation split:  52%|█████▏    | 5242/10000 [00:01<00:01, 3795.73 examples/s]Generating validation split:  57%|█████▋    | 5724/10000 [00:01<00:01, 4057.67 examples/s]Generating validation split:  64%|██████▎   | 6371/10000 [00:01<00:00, 4143.59 examples/s]Generating validation split:  68%|██████▊   | 6847/10000 [00:01<00:00, 4297.68 examples/s]Generating validation split:  75%|███████▌  | 7500/10000 [00:01<00:00, 4314.66 examples/s]Generating validation split:  80%|███████▉  | 7984/10000 [00:01<00:00, 4444.17 examples/s]Generating validation split:  86%|████████▋ | 8628/10000 [00:02<00:00, 4388.17 examples/s]Generating validation split:  93%|█████████▎| 9275/10000 [00:02<00:00, 4360.67 examples/s]Generating validation split:  98%|█████████▊| 9755/10000 [00:02<00:00, 4464.50 examples/s]                                                                                          Generating test split:   0%|          | 0/10000 [00:00<?, ? examples/s]Generating test split:   5%|▍         | 478/10000 [00:00<00:02, 4675.47 examples/s]Generating test split:  10%|▉         | 997/10000 [00:00<00:01, 4972.85 examples/s]Generating test split:  17%|█▋        | 1696/10000 [00:00<00:01, 4789.56 examples/s]Generating test split:  24%|██▍       | 2393/10000 [00:00<00:01, 4722.42 examples/s]Generating test split:  29%|██▉       | 2909/10000 [00:00<00:01, 4851.01 examples/s]Generating test split:  36%|███▌      | 3597/10000 [00:00<00:01, 4741.95 examples/s]Generating test split:  43%|████▎     | 4285/10000 [00:00<00:01, 4685.09 examples/s]Generating test split:  48%|████▊     | 4808/10000 [00:01<00:01, 4820.30 examples/s]Generating test split:  53%|█████▎    | 5337/10000 [00:01<00:01, 3887.43 examples/s]Generating test split:  59%|█████▊    | 5861/10000 [00:01<00:00, 4195.41 examples/s]Generating test split:  66%|██████▌   | 6553/10000 [00:01<00:00, 4331.19 examples/s]Generating test split:  73%|███████▎  | 7256/10000 [00:01<00:00, 4424.68 examples/s]Generating test split:  78%|███████▊  | 7766/10000 [00:01<00:00, 4580.32 examples/s]Generating test split:  83%|████████▎ | 8254/10000 [00:01<00:00, 4519.20 examples/s]Generating test split:  88%|████████▊ | 8771/10000 [00:01<00:00, 4685.69 examples/s]Generating test split:  93%|█████████▎| 9258/10000 [00:02<00:00, 4589.86 examples/s]Generating test split:  98%|█████████▊| 9776/10000 [00:02<00:00, 4746.79 examples/s]                                                                                    Dataset super_glue downloaded and prepared to /home/gbelapurkar_umass_edu/.cache/huggingface/datasets/super_glue/record/1.0.3/bb9675f958ebfee0d5d6dc5476fafe38c79123727a7258d515c450873dbdbbed. Subsequent calls will reuse this data.
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:01,  1.07it/s]100%|██████████| 3/3 [00:01<00:00,  3.18it/s]100%|██████████| 3/3 [00:01<00:00,  2.65it/s]
Map:   0%|          | 0/100730 [00:00<?, ? examples/s]Map:   1%|          | 1000/100730 [00:11<18:40, 89.03 examples/s]Map:   2%|▏         | 2000/100730 [00:23<19:25, 84.71 examples/s]Map:   3%|▎         | 3000/100730 [00:34<18:52, 86.31 examples/s]Map:   3%|▎         | 3000/100730 [00:45<18:52, 86.31 examples/s]Map:   4%|▍         | 4000/100730 [00:46<18:33, 86.87 examples/s]Map:   5%|▍         | 5000/100730 [00:57<18:19, 87.04 examples/s]Map:   6%|▌         | 6000/100730 [01:09<18:07, 87.14 examples/s]Map:   7%|▋         | 7000/100730 [01:20<17:57, 87.01 examples/s]Map:   8%|▊         | 8000/100730 [01:31<17:34, 87.94 examples/s]Map:   9%|▉         | 9000/100730 [01:43<17:21, 88.04 examples/s]Map:  10%|▉         | 10000/100730 [01:54<17:12, 87.86 examples/s]Map:  10%|▉         | 10000/100730 [02:05<17:12, 87.86 examples/s]Map:  11%|█         | 11000/100730 [02:05<16:58, 88.12 examples/s]Map:  11%|█         | 11000/100730 [02:15<16:58, 88.12 examples/s]Map:  12%|█▏        | 12000/100730 [02:17<17:06, 86.40 examples/s]Map:  13%|█▎        | 13000/100730 [02:29<16:49, 86.86 examples/s]Map:  14%|█▍        | 14000/100730 [02:40<16:43, 86.46 examples/s]Map:  15%|█▍        | 15000/100730 [02:52<16:21, 87.33 examples/s]Map:  16%|█▌        | 16000/100730 [03:03<16:15, 86.84 examples/s]Map:  17%|█▋        | 17000/100730 [03:15<16:08, 86.43 examples/s]Map:  17%|█▋        | 17000/100730 [03:26<16:08, 86.43 examples/s]Map:  18%|█▊        | 18000/100730 [03:26<15:43, 87.68 examples/s]Map:  19%|█▉        | 19000/100730 [03:38<15:36, 87.31 examples/s]Map:  20%|█▉        | 20000/100730 [03:49<15:27, 87.00 examples/s]Map:  21%|██        | 21000/100730 [04:00<15:07, 87.83 examples/s]Map:  22%|██▏       | 22000/100730 [04:11<14:49, 88.48 examples/s]Map:  23%|██▎       | 23000/100730 [04:23<14:35, 88.80 examples/s]Map:  24%|██▍       | 24000/100730 [04:34<14:31, 88.07 examples/s]Map:  24%|██▍       | 24000/100730 [04:46<14:31, 88.07 examples/s]Map:  25%|██▍       | 25000/100730 [04:46<14:33, 86.70 examples/s]Map:  26%|██▌       | 26000/100730 [04:57<14:16, 87.24 examples/s]Map:  27%|██▋       | 27000/100730 [05:09<14:07, 87.01 examples/s]Map:  28%|██▊       | 28000/100730 [05:21<14:02, 86.33 examples/s]Map:  29%|██▉       | 29000/100730 [05:33<13:57, 85.70 examples/s]Map:  30%|██▉       | 30000/100730 [05:44<13:36, 86.66 examples/s]Map:  31%|███       | 31000/100730 [05:55<13:26, 86.47 examples/s]Map:  31%|███       | 31000/100730 [06:06<13:26, 86.47 examples/s]Map:  32%|███▏      | 32000/100730 [06:07<13:09, 87.03 examples/s]Map:  33%|███▎      | 33000/100730 [06:19<13:07, 86.01 examples/s]Map:  34%|███▍      | 34000/100730 [06:30<12:50, 86.65 examples/s]Map:  35%|███▍      | 35000/100730 [06:42<12:38, 86.65 examples/s]Map:  36%|███▌      | 36000/100730 [06:53<12:22, 87.21 examples/s]Map:  37%|███▋      | 37000/100730 [07:05<12:17, 86.45 examples/s]Map:  38%|███▊      | 38000/100730 [07:16<11:58, 87.30 examples/s]Map:  38%|███▊      | 38000/100730 [07:26<11:58, 87.30 examples/s]Map:  39%|███▊      | 39000/100730 [07:27<11:46, 87.42 examples/s]Map:  40%|███▉      | 40000/100730 [07:39<11:40, 86.75 examples/s]Map:  41%|████      | 41000/100730 [07:51<11:33, 86.13 examples/s]Map:  42%|████▏     | 42000/100730 [08:02<11:16, 86.82 examples/s]Map:  43%|████▎     | 43000/100730 [08:13<10:58, 87.72 examples/s]Map:  43%|████▎     | 43000/100730 [08:26<10:58, 87.72 examples/s]Map:  44%|████▎     | 44000/100730 [08:28<11:38, 81.19 examples/s]Map:  45%|████▍     | 45000/100730 [08:39<11:07, 83.44 examples/s]Map:  46%|████▌     | 46000/100730 [08:51<10:53, 83.78 examples/s]Map:  47%|████▋     | 47000/100730 [09:02<10:34, 84.67 examples/s]Map:  48%|████▊     | 48000/100730 [09:14<10:20, 84.99 examples/s]Map:  49%|████▊     | 49000/100730 [09:25<10:02, 85.89 examples/s]Map:  49%|████▊     | 49000/100730 [09:37<10:02, 85.89 examples/s]Map:  50%|████▉     | 50000/100730 [09:37<09:46, 86.42 examples/s]Map:  51%|█████     | 51000/100730 [09:48<09:34, 86.62 examples/s]Map:  52%|█████▏    | 52000/100730 [10:00<09:24, 86.34 examples/s]Map:  53%|█████▎    | 53000/100730 [10:11<09:09, 86.80 examples/s]Map:  54%|█████▎    | 54000/100730 [10:23<08:56, 87.11 examples/s]Map:  55%|█████▍    | 55000/100730 [10:34<08:43, 87.34 examples/s]Map:  56%|█████▌    | 56000/100730 [10:45<08:33, 87.12 examples/s]Map:  56%|█████▌    | 56000/100730 [10:57<08:33, 87.12 examples/s]Map:  57%|█████▋    | 57000/100730 [10:57<08:24, 86.71 examples/s]Map:  58%|█████▊    | 58000/100730 [11:09<08:16, 86.10 examples/s]Map:  59%|█████▊    | 59000/100730 [11:21<08:04, 86.07 examples/s]Map:  60%|█████▉    | 60000/100730 [11:32<07:47, 87.09 examples/s]Map:  61%|██████    | 61000/100730 [11:43<07:37, 86.90 examples/s]Map:  62%|██████▏   | 62000/100730 [11:55<07:27, 86.60 examples/s]Map:  63%|██████▎   | 63000/100730 [12:06<07:12, 87.18 examples/s]Map:  63%|██████▎   | 63000/100730 [12:17<07:12, 87.18 examples/s]Map:  64%|██████▎   | 64000/100730 [12:17<06:56, 88.09 examples/s]Map:  65%|██████▍   | 65000/100730 [12:29<06:48, 87.42 examples/s]Map:  66%|██████▌   | 66000/100730 [12:40<06:35, 87.72 examples/s]Map:  67%|██████▋   | 67000/100730 [12:52<06:31, 86.06 examples/s]Map:  68%|██████▊   | 68000/100730 [13:04<06:15, 87.08 examples/s]Map:  68%|██████▊   | 69000/100730 [13:15<06:07, 86.46 examples/s]Map:  69%|██████▉   | 70000/100730 [13:27<05:54, 86.74 examples/s]Map:  69%|██████▉   | 70000/100730 [13:37<05:54, 86.74 examples/s]Map:  70%|███████   | 71000/100730 [13:38<05:42, 86.92 examples/s]Map:  71%|███████▏  | 72000/100730 [13:50<05:32, 86.52 examples/s]Map:  72%|███████▏  | 73000/100730 [14:01<05:18, 87.17 examples/s]Map:  73%|███████▎  | 74000/100730 [14:13<05:06, 87.15 examples/s]Map:  74%|███████▍  | 75000/100730 [14:24<04:55, 87.10 examples/s]Map:  75%|███████▌  | 76000/100730 [14:36<04:43, 87.23 examples/s]Map:  75%|███████▌  | 76000/100730 [14:47<04:43, 87.23 examples/s]Map:  76%|███████▋  | 77000/100730 [14:47<04:32, 87.05 examples/s]Map:  77%|███████▋  | 78000/100730 [14:59<04:24, 85.85 examples/s]Map:  78%|███████▊  | 79000/100730 [15:11<04:12, 86.11 examples/s]Map:  79%|███████▉  | 80000/100730 [15:22<04:01, 85.81 examples/s]Map:  80%|████████  | 81000/100730 [15:34<03:48, 86.22 examples/s]Map:  81%|████████▏ | 82000/100730 [15:45<03:36, 86.67 examples/s]Map:  82%|████████▏ | 83000/100730 [15:57<03:23, 87.28 examples/s]Map:  82%|████████▏ | 83000/100730 [16:07<03:23, 87.28 examples/s]Map:  83%|████████▎ | 84000/100730 [16:08<03:11, 87.52 examples/s]Map:  84%|████████▍ | 85000/100730 [16:19<02:58, 87.95 examples/s]Map:  85%|████████▌ | 86000/100730 [16:31<02:49, 86.75 examples/s]Map:  86%|████████▋ | 87000/100730 [16:42<02:37, 87.33 examples/s]Map:  87%|████████▋ | 88000/100730 [16:54<02:26, 86.87 examples/s]Map:  88%|████████▊ | 89000/100730 [17:06<02:15, 86.36 examples/s]Map:  88%|████████▊ | 89000/100730 [17:17<02:15, 86.36 examples/s]Map:  89%|████████▉ | 90000/100730 [17:18<02:05, 85.53 examples/s]Map:  90%|█████████ | 91000/100730 [17:29<01:53, 85.74 examples/s]Map:  91%|█████████▏| 92000/100730 [17:41<01:41, 86.21 examples/s]Map:  92%|█████████▏| 93000/100730 [17:52<01:29, 86.68 examples/s]Map:  93%|█████████▎| 94000/100730 [18:03<01:16, 87.52 examples/s]Map:  94%|█████████▍| 95000/100730 [18:15<01:05, 87.28 examples/s]Map:  95%|█████████▌| 96000/100730 [18:26<00:54, 87.54 examples/s]Map:  95%|█████████▌| 96000/100730 [18:37<00:54, 87.54 examples/s]Map:  96%|█████████▋| 97000/100730 [18:37<00:42, 87.83 examples/s]Map:  97%|█████████▋| 98000/100730 [18:49<00:31, 86.69 examples/s]Map:  98%|█████████▊| 99000/100730 [19:01<00:19, 86.66 examples/s]Map:  99%|█████████▉| 100000/100730 [19:12<00:08, 87.13 examples/s]Map: 100%|██████████| 100730/100730 [19:20<00:00, 87.43 examples/s]                                                                   Map:   0%|          | 0/10000 [00:00<?, ? examples/s]Map:  10%|█         | 1000/10000 [00:11<01:39, 90.27 examples/s]Map:  20%|██        | 2000/10000 [00:22<01:30, 88.89 examples/s]Map:  30%|███       | 3000/10000 [00:33<01:18, 89.26 examples/s]Map:  40%|████      | 4000/10000 [00:44<01:07, 89.13 examples/s]Map:  40%|████      | 4000/10000 [00:55<01:07, 89.13 examples/s]Map:  50%|█████     | 5000/10000 [00:56<00:56, 89.06 examples/s]Map:  60%|██████    | 6000/10000 [01:07<00:44, 89.10 examples/s]Map:  70%|███████   | 7000/10000 [01:18<00:34, 88.03 examples/s]Map:  80%|████████  | 8000/10000 [01:29<00:22, 88.91 examples/s]Map:  90%|█████████ | 9000/10000 [01:41<00:11, 89.11 examples/s]Map: 100%|██████████| 10000/10000 [01:52<00:00, 88.96 examples/s]                                                                 /home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
Traceback (most recent call last):
  File "code/fine_tuner_linear_layer.py", line 147, in <module>
    main(args)
  File "code/fine_tuner_linear_layer.py", line 120, in main
    trainer.train()
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/trainer.py", line 1633, in train
    return inner_training_loop(
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/trainer.py", line 1902, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/trainer.py", line 2645, in training_step
    loss = self.compute_loss(model, inputs)
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/trainer.py", line 2677, in compute_loss
    outputs = model(**inputs)
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 1562, in forward
    outputs = self.bert(
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 974, in forward
    batch_size, seq_length = input_shape
ValueError: too many values to unpack (expected 2)
######################################################################
linear layer fine-tuning cola
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.15) or chardet (3.0.4) doesn't match a supported version!
  warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Using cuda
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 84.85it/s]
/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
{'eval_loss': 0.7192108035087585, 'eval_matthews_correlation': 0.01871568716552216, 'eval_runtime': 33.1376, 'eval_samples_per_second': 31.475, 'eval_steps_per_second': 1.992, 'epoch': 1.0}
{'loss': 0.7224, 'learning_rate': 2.5e-06, 'epoch': 1.87}
{'eval_loss': 0.6354354619979858, 'eval_matthews_correlation': 0.0463559874942472, 'eval_runtime': 33.3412, 'eval_samples_per_second': 31.283, 'eval_steps_per_second': 1.98, 'epoch': 2.0}
{'eval_loss': 0.6159858703613281, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.1165, 'eval_samples_per_second': 31.495, 'eval_steps_per_second': 1.993, 'epoch': 3.0}
{'loss': 0.6182, 'learning_rate': 5e-06, 'epoch': 3.74}
{'eval_loss': 0.6162400841712952, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.1089, 'eval_samples_per_second': 31.502, 'eval_steps_per_second': 1.993, 'epoch': 4.0}
{'eval_loss': 0.6164698004722595, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.0931, 'eval_samples_per_second': 31.517, 'eval_steps_per_second': 1.994, 'epoch': 5.0}
{'loss': 0.6102, 'learning_rate': 7.5e-06, 'epoch': 5.61}
{'eval_loss': 0.6158010363578796, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.096, 'eval_samples_per_second': 31.514, 'eval_steps_per_second': 1.994, 'epoch': 6.0}
{'eval_loss': 0.6159749627113342, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.1054, 'eval_samples_per_second': 31.505, 'eval_steps_per_second': 1.994, 'epoch': 7.0}
{'loss': 0.6114, 'learning_rate': 1e-05, 'epoch': 7.48}
{'eval_loss': 0.6147787570953369, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.0956, 'eval_samples_per_second': 31.515, 'eval_steps_per_second': 1.994, 'epoch': 8.0}
{'eval_loss': 0.6144706010818481, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.1215, 'eval_samples_per_second': 31.49, 'eval_steps_per_second': 1.993, 'epoch': 9.0}
{'loss': 0.6093, 'learning_rate': 1.25e-05, 'epoch': 9.35}
{'eval_loss': 0.6136366724967957, 'eval_matthews_correlation': 0.0, 'eval_runtime': 33.119, 'eval_samples_per_second': 31.493, 'eval_steps_per_second': 1.993, 'epoch': 9.98}
{'train_runtime': 3257.1635, 'train_samples_per_second': 26.253, 'train_steps_per_second': 0.82, 'train_loss': 0.6329574042045222, 'epoch': 9.98}
Total training time: 3257.18 seconds
######################################################################
linear layer fine-tuning mrpc
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.15) or chardet (3.0.4) doesn't match a supported version!
  warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Using cuda
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  4.26it/s]100%|██████████| 3/3 [00:00<00:00, 11.50it/s]
/home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
{'eval_loss': 0.6344302296638489, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.9398, 'eval_samples_per_second': 31.531, 'eval_steps_per_second': 2.009, 'epoch': 1.0}
{'eval_loss': 0.6302304267883301, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.9518, 'eval_samples_per_second': 31.501, 'eval_steps_per_second': 2.007, 'epoch': 2.0}
{'eval_loss': 0.6259551644325256, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.9401, 'eval_samples_per_second': 31.53, 'eval_steps_per_second': 2.009, 'epoch': 3.0}
{'eval_loss': 0.6234568357467651, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.9539, 'eval_samples_per_second': 31.496, 'eval_steps_per_second': 2.007, 'epoch': 4.0}
{'loss': 0.6446, 'learning_rate': 2.5e-06, 'epoch': 4.35}
{'eval_loss': 0.6227564215660095, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.916, 'eval_samples_per_second': 31.589, 'eval_steps_per_second': 2.013, 'epoch': 5.0}
{'eval_loss': 0.6226390600204468, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.977, 'eval_samples_per_second': 31.44, 'eval_steps_per_second': 2.004, 'epoch': 6.0}
{'eval_loss': 0.6226063370704651, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.9496, 'eval_samples_per_second': 31.507, 'eval_steps_per_second': 2.008, 'epoch': 7.0}
{'eval_loss': 0.6225841641426086, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.947, 'eval_samples_per_second': 31.513, 'eval_steps_per_second': 2.008, 'epoch': 8.0}
{'loss': 0.635, 'learning_rate': 5e-06, 'epoch': 8.7}
{'eval_loss': 0.6225343346595764, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.9667, 'eval_samples_per_second': 31.465, 'eval_steps_per_second': 2.005, 'epoch': 9.0}
{'eval_loss': 0.6224619746208191, 'eval_accuracy': 0.6838235294117647, 'eval_runtime': 12.9679, 'eval_samples_per_second': 31.462, 'eval_steps_per_second': 2.005, 'epoch': 10.0}
{'train_runtime': 1417.6691, 'train_samples_per_second': 25.873, 'train_steps_per_second': 0.811, 'train_loss': 0.6396537183678669, 'epoch': 10.0}
Total training time: 1417.68 seconds
######################################################################
linear layer fine-tuning stsb
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.15) or chardet (3.0.4) doesn't match a supported version!
  warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Using cuda
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  4.20it/s]100%|██████████| 3/3 [00:00<00:00, 11.45it/s]
Map:   0%|          | 0/5749 [00:00<?, ? examples/s]Map:  17%|█▋        | 1000/5749 [00:00<00:01, 3257.79 examples/s]Map:  35%|███▍      | 2000/5749 [00:00<00:00, 3754.36 examples/s]Map:  52%|█████▏    | 3000/5749 [00:00<00:00, 3960.11 examples/s]Map:  70%|██████▉   | 4000/5749 [00:01<00:00, 4085.63 examples/s]Map:  87%|████████▋ | 5000/5749 [00:01<00:00, 3690.63 examples/s]Map: 100%|██████████| 5749/5749 [00:01<00:00, 3890.54 examples/s]                                                                 Map:   0%|          | 0/1500 [00:00<?, ? examples/s]Map:  67%|██████▋   | 1000/1500 [00:00<00:00, 4191.32 examples/s]Map: 100%|██████████| 1500/1500 [00:00<00:00, 4167.62 examples/s]                                                                 /home/gbelapurkar_umass_edu/.local/lib/python3.8/site-packages/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
{'eval_loss': 8.663129806518555, 'eval_accuracy': 0.22933333333333333, 'eval_runtime': 47.4725, 'eval_samples_per_second': 31.597, 'eval_steps_per_second': 1.98, 'epoch': 1.0}
{'eval_loss': 7.854169845581055, 'eval_accuracy': 0.22933333333333333, 'eval_runtime': 47.4817, 'eval_samples_per_second': 31.591, 'eval_steps_per_second': 1.98, 'epoch': 2.0}
{'loss': 9.8382, 'learning_rate': 2.5e-06, 'epoch': 2.78}
{'eval_loss': 6.61240816116333, 'eval_accuracy': 0.22933333333333333, 'eval_runtime': 47.4857, 'eval_samples_per_second': 31.588, 'eval_steps_per_second': 1.98, 'epoch': 3.0}
{'eval_loss': 5.099264144897461, 'eval_accuracy': 0.22933333333333333, 'eval_runtime': 47.4818, 'eval_samples_per_second': 31.591, 'eval_steps_per_second': 1.98, 'epoch': 4.0}
{'eval_loss': 3.5409939289093018, 'eval_accuracy': 0.286, 'eval_runtime': 47.5065, 'eval_samples_per_second': 31.575, 'eval_steps_per_second': 1.979, 'epoch': 5.0}
{'loss': 5.909, 'learning_rate': 5e-06, 'epoch': 5.56}
{'eval_loss': 2.2285051345825195, 'eval_accuracy': 0.24933333333333332, 'eval_runtime': 47.695, 'eval_samples_per_second': 31.45, 'eval_steps_per_second': 1.971, 'epoch': 6.0}
{'eval_loss': 1.5174726247787476, 'eval_accuracy': 0.27066666666666667, 'eval_runtime': 47.4824, 'eval_samples_per_second': 31.591, 'eval_steps_per_second': 1.98, 'epoch': 7.0}
{'eval_loss': 1.477665662765503, 'eval_accuracy': 0.3293333333333333, 'eval_runtime': 47.485, 'eval_samples_per_second': 31.589, 'eval_steps_per_second': 1.98, 'epoch': 8.0}
{'loss': 2.0759, 'learning_rate': 7.5e-06, 'epoch': 8.33}
{'eval_loss': 1.4859312772750854, 'eval_accuracy': 0.3333333333333333, 'eval_runtime': 47.4896, 'eval_samples_per_second': 31.586, 'eval_steps_per_second': 1.979, 'epoch': 9.0}
{'eval_loss': 1.4754424095153809, 'eval_accuracy': 0.33266666666666667, 'eval_runtime': 47.5016, 'eval_samples_per_second': 31.578, 'eval_steps_per_second': 1.979, 'epoch': 10.0}
{'train_runtime': 2460.0331, 'train_samples_per_second': 23.37, 'train_steps_per_second': 0.732, 'train_loss': 5.220453813340929, 'epoch': 10.0}
Total training time: 2460.05 seconds
######################################################################
linear layer fine-tuning wnli
/usr/lib/python3/dist-packages/requests/__init__.py:89: RequestsDependencyWarning: urllib3 (1.26.15) or chardet (3.0.4) doesn't match a supported version!
  warnings.warn("urllib3 ({}) or chardet ({}) doesn't match a supported "
Using cuda
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 204.11it/s]